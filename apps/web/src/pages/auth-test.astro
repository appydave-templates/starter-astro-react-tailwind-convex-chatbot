---
// Real authentication test with OAuth providers
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Real OAuth Authentication Test</title>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div class="max-w-4xl mx-auto py-8 px-4">
      <h1 class="text-3xl font-bold text-gray-900 mb-8">üîê Real OAuth Authentication Test</h1>
      
      <!-- Status Info -->
      <div class="bg-green-50 border border-green-200 rounded-lg p-6 mb-8">
        <h2 class="text-xl font-semibold text-green-900 mb-4">OAuth Credentials Configured ‚úÖ</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <span class="font-medium text-green-800">Google OAuth:</span>
            <span class="text-green-700 ml-2">Ready</span>
          </div>
          <div>
            <span class="font-medium text-green-800">GitHub OAuth:</span>
            <span class="text-green-700 ml-2">Ready</span>
          </div>
          <div>
            <span class="font-medium text-green-800">BetterAuth:</span>
            <span class="text-green-700 ml-2">Enabled</span>
          </div>
          <div>
            <span class="font-medium text-green-800">Database:</span>
            <span class="text-green-700 ml-2">In-Memory (No Convex)</span>
          </div>
        </div>
      </div>

      <!-- Real OAuth Testing -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <!-- OAuth Login -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">üîì OAuth Login</h3>
          <div class="space-y-3">
            <button
              onclick="signInWithGoogle()"
              class="w-full flex items-center justify-center px-4 py-3 rounded-md font-medium transition-colors bg-white border border-gray-300 hover:bg-gray-50 text-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              <span class="text-lg mr-2">üåê</span>
              Sign in with Google
            </button>
            
            <button
              onclick="signInWithGitHub()"
              class="w-full flex items-center justify-center px-4 py-3 rounded-md font-medium transition-colors bg-gray-900 hover:bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
            >
              <span class="text-lg mr-2">üêô</span>
              Sign in with GitHub
            </button>
          </div>
          <p class="text-xs text-gray-500 mt-3">
            These will redirect to real OAuth providers
          </p>
        </div>

        <!-- Session Status -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">üîç Session Status</h3>
          <div class="space-y-3">
            <button
              onclick="checkSession()"
              class="w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              Check Current Session
            </button>
            
            <button
              onclick="signOut()"
              class="w-full px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
            >
              Sign Out
            </button>
          </div>
          
          <div id="session-result" class="mt-4 p-3 bg-gray-50 rounded-md text-sm">
            <span class="text-gray-500">Click "Check Current Session" to see status</span>
          </div>
        </div>
      </div>

      <!-- Expected Results -->
      <div class="bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-blue-900 mb-4">üìã What Should Happen</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <h4 class="font-semibold text-blue-800 mb-2">OAuth Flow:</h4>
            <ul class="text-sm text-blue-700 space-y-1">
              <li>‚Ä¢ Click OAuth button</li>
              <li>‚Ä¢ Redirect to provider (Google/GitHub)</li>
              <li>‚Ä¢ Authorize the application</li>
              <li>‚Ä¢ Redirect back to your app</li>
              <li>‚Ä¢ Session established</li>
            </ul>
          </div>
          <div>
            <h4 class="font-semibold text-blue-800 mb-2">After Login:</h4>
            <ul class="text-sm text-blue-700 space-y-1">
              <li>‚Ä¢ Session check shows user data</li>
              <li>‚Ä¢ User stays logged in</li>
              <li>‚Ä¢ Can access protected routes</li>
              <li>‚Ä¢ Sign out clears session</li>
            </ul>
          </div>
        </div>
      </div>
    </div>

    <!-- Notification Toast Container -->
    <div id="notification-container"></div>
    
    <script type="module">
      import { NotificationToast } from '/src/components/auth/NotificationToast.tsx';
      import React from 'react';
      import { createRoot } from 'react-dom/client';

      // Render notification toast
      const notificationContainer = document.getElementById('notification-container');
      if (notificationContainer) {
        const notificationRoot = createRoot(notificationContainer);
        notificationRoot.render(React.createElement(NotificationToast));
      }
    </script>

    <script>
      // OAuth signin functions - now working with proper environment variables!
      console.log('Auth-test script loaded');
      
      window.signInWithGoogle = async function() {
        try {
          console.log('Google button clicked - attempting OAuth signin...');
          
          // Call BetterAuth social signin API
          const response = await fetch('/api/auth/sign-in/social', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            credentials: 'include',
            body: JSON.stringify({
              provider: 'google',
              callbackURL: window.location.origin + '/dashboard'
            })
          });
          
          if (response.ok) {
            const data = await response.json();
            console.log('Google OAuth response:', data);
            
            // Redirect to Google OAuth
            if (data.url) {
              console.log('Redirecting to Google OAuth...');
              window.location.href = data.url;
            }
          } else {
            console.error('Google signin failed:', response.status);
            alert('Google signin failed: ' + response.status);
          }
          
        } catch (error) {
          console.error('Google signin error:', error);
          alert('Google signin error: ' + error.message);
        }
      };
      
      window.signInWithGitHub = async function() {
        try {
          console.log('GitHub button clicked - attempting OAuth signin...');
          
          // Call BetterAuth social signin API
          const response = await fetch('/api/auth/sign-in/social', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            credentials: 'include',
            body: JSON.stringify({
              provider: 'github',
              callbackURL: window.location.origin + '/dashboard'
            })
          });
          
          if (response.ok) {
            const data = await response.json();
            console.log('GitHub OAuth response:', data);
            
            // Redirect to GitHub OAuth
            if (data.url) {
              console.log('Redirecting to GitHub OAuth...');
              window.location.href = data.url;
            }
          } else {
            console.error('GitHub signin failed:', response.status);
            alert('GitHub signin failed: ' + response.status);
          }
          
        } catch (error) {
          console.error('GitHub signin error:', error);
          alert('GitHub signin error: ' + error.message);
        }
      };
      
      console.log('OAuth functions ready - environment variables loaded successfully!');
    </script>

    <script>
      async function checkSession() {
        const resultDiv = document.getElementById('session-result');
        resultDiv.innerHTML = '<span class="text-blue-600">Checking session...</span>';
        
        try {
          const response = await fetch('/api/auth/session');
          const data = await response.json();
          
          if (data.user) {
            resultDiv.innerHTML = `
              <div class="text-green-600">
                <strong>‚úÖ Authenticated</strong><br>
                <span class="text-sm">User: ${data.user.name || data.user.email || data.user.id}</span><br>
                <span class="text-xs text-gray-500">Session expires: ${new Date(data.session?.expiresAt || Date.now()).toLocaleString()}</span>
              </div>
            `;
          } else {
            resultDiv.innerHTML = '<span class="text-gray-600">‚ùå Not authenticated</span>';
          }
        } catch (error) {
          resultDiv.innerHTML = `<span class="text-red-600">‚ùå Error: ${error.message}</span>`;
        }
      }
      
      async function signOut() {
        const resultDiv = document.getElementById('session-result');
        resultDiv.innerHTML = '<span class="text-blue-600">Signing out...</span>';
        
        try {
          const response = await fetch('/api/auth/session', {
            method: 'DELETE'
          });
          const data = await response.json();
          
          if (data.success) {
            resultDiv.innerHTML = '<span class="text-green-600">‚úÖ Signed out successfully</span>';
            // Refresh the page after a short delay
            setTimeout(() => window.location.reload(), 1000);
          } else {
            resultDiv.innerHTML = `<span class="text-red-600">‚ùå Sign out failed: ${data.message}</span>`;
          }
        } catch (error) {
          resultDiv.innerHTML = `<span class="text-red-600">‚ùå Error: ${error.message}</span>`;
        }
      }
      
      // Auto-check session on page load
      window.addEventListener('load', checkSession);
    </script>
  </body>
</html>