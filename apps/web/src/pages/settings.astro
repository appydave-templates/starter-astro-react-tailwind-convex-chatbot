---
// This page is protected by middleware
// User authentication is handled in middleware.ts
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Manage your account settings, privacy preferences, notifications, and security options." />
    <title>Settings - AI Starter Template</title>
    
    <!-- Prevent indexing of settings page -->
    <meta name="robots" content="noindex, nofollow" />
    
  </head>
  <body class="bg-gray-50 min-h-screen">
    <!-- Navigation Header -->
    <nav class="bg-white shadow-sm border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center">
            <a href="/" class="text-2xl font-bold text-blue-600">
              AI Starter
            </a>
          </div>
          <div class="flex items-center space-x-4">
            <a 
              href="/profile"
              class="text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium transition-colors"
            >
              Profile
            </a>
            <div id="user-menu-container"></div>
          </div>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main class="max-w-6xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
      <!-- Page Header -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900">Account Settings</h1>
        <p class="text-gray-600 mt-2">
          Manage your account preferences, privacy settings, and security options
        </p>
      </div>

      <!-- Settings Navigation -->
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <!-- Sidebar Navigation -->
        <div class="lg:col-span-1">
          <nav class="bg-white rounded-lg shadow-md p-4">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">Settings</h2>
            <ul class="space-y-2">
              <li>
                <button 
                  id="tab-account"
                  class="w-full text-left px-3 py-2 rounded-md text-sm font-medium bg-blue-50 text-blue-700 border-l-4 border-blue-500"
                >
                  Account & Privacy
                </button>
              </li>
              <li>
                <button 
                  id="tab-profile"
                  class="w-full text-left px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50"
                >
                  Profile Information
                </button>
              </li>
              <li>
                <button 
                  id="tab-security"
                  class="w-full text-left px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50"
                >
                  Security & Access
                </button>
              </li>
              <li>
                <button 
                  id="tab-danger"
                  class="w-full text-left px-3 py-2 rounded-md text-sm font-medium text-red-700 hover:bg-red-50"
                >
                  Danger Zone
                </button>
              </li>
            </ul>
          </nav>
        </div>

        <!-- Main Settings Content -->
        <div class="lg:col-span-3">
          <!-- Account Settings Tab -->
          <div id="content-account" class="settings-tab">
            <div id="account-settings-container"></div>
          </div>

          <!-- Profile Tab -->
          <div id="content-profile" class="settings-tab hidden">
            <div id="profile-edit-container"></div>
          </div>

          <!-- Security Tab -->
          <div id="content-security" class="settings-tab hidden">
            <div class="bg-white rounded-lg shadow-md p-6">
              <h2 class="text-2xl font-bold text-gray-900 mb-6">Security & Access</h2>
              
              <div class="space-y-6">
                <div class="border-b border-gray-200 pb-6">
                  <h3 class="text-lg font-medium text-gray-900 mb-3">OAuth Connections</h3>
                  <div class="space-y-3">
                    <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                      <div class="flex items-center space-x-3">
                        <span class="text-2xl">üåê</span>
                        <div>
                          <h4 class="text-sm font-medium text-gray-900">Google Account</h4>
                          <p class="text-sm text-gray-500">Connected for authentication</p>
                        </div>
                      </div>
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                        Connected
                      </span>
                    </div>
                    
                    <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                      <div class="flex items-center space-x-3">
                        <span class="text-2xl">üêô</span>
                        <div>
                          <h4 class="text-sm font-medium text-gray-900">GitHub Account</h4>
                          <p class="text-sm text-gray-500">Available for authentication</p>
                        </div>
                      </div>
                      <button class="px-3 py-1 border border-gray-300 rounded-md text-sm text-gray-700 hover:bg-gray-50">
                        Connect
                      </button>
                    </div>
                  </div>
                </div>

                <div class="border-b border-gray-200 pb-6">
                  <h3 class="text-lg font-medium text-gray-900 mb-3">Session Management</h3>
                  <div class="space-y-3">
                    <div class="flex items-center justify-between">
                      <div>
                        <h4 class="text-sm font-medium text-gray-900">Active Sessions</h4>
                        <p class="text-sm text-gray-500">Currently signed in on 1 device</p>
                      </div>
                      <button class="px-3 py-1 border border-gray-300 rounded-md text-sm text-gray-700 hover:bg-gray-50">
                        View All
                      </button>
                    </div>
                  </div>
                </div>

                <div>
                  <h3 class="text-lg font-medium text-gray-900 mb-3">Account Recovery</h3>
                  <p class="text-sm text-gray-600 mb-3">
                    Make sure you can recover your account if you lose access.
                  </p>
                  <button class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm">
                    Download Recovery Codes
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- Danger Zone Tab -->
          <div id="content-danger" class="settings-tab hidden">
            <div id="delete-account-container"></div>
          </div>
        </div>
      </div>
    </main>

    <!-- React Components -->
    <script type="module">
      import { AccountSettings } from '/src/components/profile/AccountSettings.tsx';
      import { ProfileEdit } from '/src/components/profile/ProfileEdit.tsx';
      import { DeleteAccount } from '/src/components/profile/DeleteAccount.tsx';
      import { UserMenu } from '/src/components/auth/UserMenu.tsx';
      import { AuthProvider } from '/src/components/auth/AuthProvider.tsx';
      import React from 'react';
      import { createRoot } from 'react-dom/client';

      // Tab switching functionality
      function initTabSwitching() {
        const tabs = ['account', 'profile', 'security', 'danger'];
        
        tabs.forEach(tab => {
          const tabButton = document.getElementById(`tab-${tab}`);
          const tabContent = document.getElementById(`content-${tab}`);
          
          tabButton.addEventListener('click', () => {
            // Hide all tabs
            tabs.forEach(otherTab => {
              document.getElementById(`tab-${otherTab}`).className = 
                'w-full text-left px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50';
              document.getElementById(`content-${otherTab}`).classList.add('hidden');
            });
            
            // Show selected tab
            if (tab === 'danger') {
              tabButton.className = 
                'w-full text-left px-3 py-2 rounded-md text-sm font-medium text-red-700 bg-red-50 border-l-4 border-red-500';
            } else {
              tabButton.className = 
                'w-full text-left px-3 py-2 rounded-md text-sm font-medium bg-blue-50 text-blue-700 border-l-4 border-blue-500';
            }
            tabContent.classList.remove('hidden');
          });
        });
      }

      // Initialize tab switching
      initTabSwitching();

      // Render Account Settings
      const accountContainer = document.getElementById('account-settings-container');
      const accountRoot = createRoot(accountContainer);
      accountRoot.render(
        React.createElement(AuthProvider, {}, 
          React.createElement(AccountSettings)
        )
      );

      // Render Profile Edit
      const profileContainer = document.getElementById('profile-edit-container');
      const profileRoot = createRoot(profileContainer);
      profileRoot.render(
        React.createElement(AuthProvider, {}, 
          React.createElement(ProfileEdit)
        )
      );

      // Render Delete Account
      const deleteContainer = document.getElementById('delete-account-container');
      const deleteRoot = createRoot(deleteContainer);
      deleteRoot.render(
        React.createElement(AuthProvider, {}, 
          React.createElement(DeleteAccount)
        )
      );

      // Render User Menu
      const userMenuContainer = document.getElementById('user-menu-container');
      const userMenuRoot = createRoot(userMenuContainer);
      userMenuRoot.render(
        React.createElement(AuthProvider, {},
          React.createElement(UserMenu)
        )
      );
    </script>
  </body>
</html>