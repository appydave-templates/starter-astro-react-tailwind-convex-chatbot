---
// Better Auth UI Forgot Password Page
// Modern password reset page using Better Auth UI components
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Reset your password - Recover access to AI Starter Template." />
    <title>Forgot Password - AI Starter Template</title>
    
    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Forgot Password - AI Starter Template" />
    <meta property="og:description" content="Reset your password to regain access to your account." />
    <meta property="og:url" content={Astro.url} />
    
    <!-- Prevent indexing of auth pages -->
    <meta name="robots" content="noindex, nofollow" />
  </head>
  <body class="bg-gradient-to-br from-blue-50 via-white to-purple-50 min-h-screen">
    <!-- Header -->
    <header class="bg-white/80 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-10">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center">
            <a href="/" class="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
              AI Starter
            </a>
          </div>
          <div class="flex items-center space-x-4">
            <a 
              href="/sign-in"
              class="text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium transition-colors"
            >
              Back to Sign In
            </a>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="flex items-center justify-center min-h-[calc(100vh-4rem)] py-12 px-4 sm:px-6 lg:px-8">
      <div class="max-w-md w-full">
        <!-- Header -->
        <div class="text-center mb-8">
          <h1 class="text-3xl font-bold text-gray-900 mb-2">Reset your password</h1>
          <p class="text-gray-600">
            Enter your email address and we'll send you a link to reset your password
          </p>
        </div>

        <!-- Form Container -->
        <div id="forgot-password-container" class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
          <!-- Loading skeleton -->
          <div class="animate-pulse">
            <div class="space-y-4">
              <div class="h-10 bg-gray-200 rounded-lg"></div>
              <div class="h-12 bg-gray-200 rounded-lg"></div>
            </div>
          </div>
        </div>

        <!-- Footer Links -->
        <div class="text-center mt-8 space-y-4">
          <div class="text-sm text-gray-600">
            Remember your password?{' '}
            <a href="/sign-in" class="text-blue-600 hover:text-blue-500 underline">
              Sign in here
            </a>
          </div>
          
          <div class="flex justify-center space-x-6 text-sm text-gray-500">
            <a href="/help" class="hover:text-gray-700 transition-colors">Help</a>
            <a href="/contact" class="hover:text-gray-700 transition-colors">Contact</a>
            <a href="/about" class="hover:text-gray-700 transition-colors">About</a>
          </div>
        </div>
      </div>
    </main>

    <!-- Simplified form without React -->
    <script is:inline>
      // Simple vanilla JS implementation
      const container = document.getElementById('forgot-password-container');
      if (container) {
        container.innerHTML = `
          <form id="forgot-password-form" class="space-y-4">
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                Email address
              </label>
              <input
                id="email"
                type="email"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="Enter your email address"
                required
              />
            </div>
            <button
              type="submit"
              class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              Send reset link
            </button>
          </form>
          <div class="text-center mt-4">
            <p class="text-sm text-gray-600">
              We'll send you a secure link to reset your password. Check your spam folder if you don't see it in your inbox.
            </p>
          </div>
        `;

        // Handle form submission
        const form = document.getElementById('forgot-password-form');
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          const email = document.getElementById('email').value;
          const submitBtn = form.querySelector('button[type="submit"]');
          
          if (!email) {
            showNotification('Please enter your email address', 'error');
            return;
          }

          // Show loading state
          submitBtn.disabled = true;
          submitBtn.innerHTML = `
            <div class="flex items-center">
              <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              Sending email...
            </div>
          `;
          
          try {
            // Simulate API call
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // Show success
            showNotification(`Check your email! We've sent a password reset link to ${email}`, 'success', 8000);
            form.reset();
          } catch (error) {
            showNotification('Failed to send reset email. Please try again.', 'error');
          } finally {
            // Reset button
            submitBtn.disabled = false;
            submitBtn.textContent = 'Send reset link';
          }
        });
      }

      function showNotification(message, type = 'info', duration = 5000) {
        const notification = document.createElement('div');
        const bgColor = type === 'success' ? 'bg-green-500' : type === 'error' ? 'bg-red-500' : 'bg-blue-500';
        notification.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50 max-w-sm`;
        notification.innerHTML = `<div class="text-sm">${message}</div>`;
        document.body.appendChild(notification);
        
        // Auto-remove notification
        setTimeout(() => {
          notification.remove();
        }, duration);
      }
    </script>

    <!-- Background Decoration -->
    <div class="fixed inset-0 -z-10 overflow-hidden">
      <div class="absolute -top-40 -right-32 w-96 h-96 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
      <div class="absolute -bottom-32 -left-40 w-96 h-96 bg-blue-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
    </div>

    <style>
      @keyframes blob {
        0%, 100% {
          transform: translate(0px, 0px) scale(1);
        }
        33% {
          transform: translate(30px, -50px) scale(1.1);
        }
        66% {
          transform: translate(-20px, 20px) scale(0.9);
        }
      }
      .animate-blob {
        animation: blob 7s infinite;
      }
      .animation-delay-2000 {
        animation-delay: 2s;
      }
      .animation-delay-4000 {
        animation-delay: 4s;
      }
    </style>
  </body>
</html>