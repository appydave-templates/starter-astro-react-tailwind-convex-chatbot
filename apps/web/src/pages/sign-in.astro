---
// Better Auth UI Sign In Page
// Modern sign-in page using Better Auth UI components
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Sign in to your account - Access AI Starter Template with Google, GitHub, or email." />
    <title>Sign In - AI Starter Template</title>
    
    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Sign In - AI Starter Template" />
    <meta property="og:description" content="Sign in to your account to continue with AI-powered development." />
    <meta property="og:url" content={Astro.url} />
    
    <!-- Prevent indexing of auth pages -->
    <meta name="robots" content="noindex, nofollow" />
  </head>
  <body class="bg-gradient-to-br from-blue-50 via-white to-purple-50 min-h-screen">
    <!-- Header -->
    <header class="bg-white/80 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-10">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center">
            <a href="/" class="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
              AI Starter
            </a>
          </div>
          <div class="flex items-center space-x-4">
            <a 
              href="/sign-up"
              class="text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium transition-colors"
            >
              Don't have an account? Sign up
            </a>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="flex items-center justify-center min-h-[calc(100vh-4rem)] py-12 px-4 sm:px-6 lg:px-8">
      <div class="max-w-md w-full">
        <!-- Header -->
        <div class="text-center mb-8">
          <h1 class="text-3xl font-bold text-gray-900 mb-2">Welcome back</h1>
          <p class="text-gray-600">
            Sign in to your account to continue
          </p>
        </div>

        <!-- Auth Card Container -->
        <div id="auth-card-container" class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
          <!-- Loading skeleton -->
          <div class="animate-pulse">
            <div class="space-y-4">
              <div class="h-12 bg-gray-200 rounded-lg"></div>
              <div class="h-12 bg-gray-200 rounded-lg"></div>
              <div class="h-px bg-gray-200"></div>
              <div class="h-10 bg-gray-200 rounded-lg"></div>
              <div class="h-10 bg-gray-200 rounded-lg"></div>
              <div class="h-12 bg-gray-200 rounded-lg"></div>
            </div>
          </div>
        </div>

        <!-- Footer Links -->
        <div class="text-center mt-8 space-y-4">
          <div class="text-sm text-gray-600">
            <a href="/forgot-password" class="text-blue-600 hover:text-blue-500 underline">
              Forgot your password?
            </a>
          </div>
          
          <div class="flex justify-center space-x-6 text-sm text-gray-500">
            <a href="/help" class="hover:text-gray-700 transition-colors">Help</a>
            <a href="/contact" class="hover:text-gray-700 transition-colors">Contact</a>
            <a href="/about" class="hover:text-gray-700 transition-colors">About</a>
          </div>
        </div>
      </div>
    </main>

    <!-- Auth Form -->
    <script is:inline>
      // Get redirect URL from query params
      const urlParams = new URLSearchParams(window.location.search);
      const redirectTo = urlParams.get('redirect') || '/dashboard';
      const container = document.getElementById('auth-card-container');

      if (container) {
        container.innerHTML = `
          <div class="space-y-6">
            <!-- Social Providers -->
            <div class="space-y-3">
              <button id="google-btn" class="w-full flex items-center justify-center px-4 py-3 border border-gray-300 rounded-lg shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                <svg class="w-5 h-5 mr-3" viewBox="0 0 24 24">
                  <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                  <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                  <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                  <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                </svg>
                Continue with Google
              </button>
              
              <button id="github-btn" class="w-full flex items-center justify-center px-4 py-3 border border-gray-300 rounded-lg shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                <svg class="w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
                Continue with GitHub
              </button>
            </div>

            <!-- Divider -->
            <div class="relative">
              <div class="absolute inset-0 flex items-center">
                <div class="w-full border-t border-gray-300"></div>
              </div>
              <div class="relative flex justify-center text-sm">
                <span class="px-2 bg-white text-gray-500">Or</span>
              </div>
            </div>

            <!-- Email/Password Form -->
            <form id="signin-form" class="space-y-4">
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email address</label>
                <input id="email" type="email" class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Enter your email" required />
              </div>
              <div>
                <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                <input id="password" type="password" class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Enter your password" required />
              </div>
              
              <!-- Remember Me & Forgot Password -->
              <div class="flex items-center justify-between">
                <label class="flex items-center">
                  <input type="checkbox" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded" />
                  <span class="ml-2 text-sm text-gray-600">Remember me</span>
                </label>
                <a href="/forgot-password" class="text-sm text-blue-600 hover:text-blue-500">Forgot password?</a>
              </div>
              
              <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
                Sign in
              </button>
            </form>

            <!-- Sign up link -->
            <div class="text-center">
              <p class="text-sm text-gray-600">
                Don't have an account? 
                <a href="/sign-up" class="text-blue-600 hover:text-blue-500 font-medium">Sign up here</a>
              </p>
            </div>
          </div>
        `;

        // Handle social auth
        document.getElementById('google-btn').addEventListener('click', async () => {
          try {
            console.log('Google button clicked - attempting OAuth signin...');
            
            const response = await fetch('/api/auth/sign-in/social', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              credentials: 'include',
              body: JSON.stringify({
                provider: 'google',
                callbackURL: redirectTo
              })
            });
            
            if (response.ok) {
              const data = await response.json();
              console.log('Google OAuth response:', data);
              
              if (data.url) {
                console.log('Redirecting to Google OAuth...');
                window.location.href = data.url;
              }
            } else {
              console.error('Google signin failed:', response.status);
              showNotification('Google signin failed', 'error');
            }
          } catch (error) {
            console.error('Google signin error:', error);
            showNotification('Google signin error', 'error');
          }
        });
        
        document.getElementById('github-btn').addEventListener('click', async () => {
          try {
            console.log('GitHub button clicked - attempting OAuth signin...');
            
            const response = await fetch('/api/auth/sign-in/social', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              credentials: 'include',
              body: JSON.stringify({
                provider: 'github',
                callbackURL: redirectTo
              })
            });
            
            if (response.ok) {
              const data = await response.json();
              console.log('GitHub OAuth response:', data);
              
              if (data.url) {
                console.log('Redirecting to GitHub OAuth...');
                window.location.href = data.url;
              }
            } else {
              console.error('GitHub signin failed:', response.status);
              showNotification('GitHub signin failed', 'error');
            }
          } catch (error) {
            console.error('GitHub signin error:', error);
            showNotification('GitHub signin error', 'error');
          }
        });

        // Handle email signin
        document.getElementById('signin-form').addEventListener('submit', async (e) => {
          e.preventDefault();
          
          const email = document.getElementById('email').value;
          const password = document.getElementById('password').value;
          const submitBtn = e.target.querySelector('button[type="submit"]');
          
          if (!email || !password) {
            showNotification('Please fill in all fields', 'error');
            return;
          }

          // Show loading state
          submitBtn.disabled = true;
          submitBtn.textContent = 'Signing in...';
          
          try {
            // Simulate API call
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // Show success
            const user = { email, name: email.split('@')[0] };
            showNotification(`Welcome back, ${user.name}!`, 'success');
            
            // Redirect after delay
            setTimeout(() => {
              window.location.href = redirectTo;
            }, 1500);
          } catch (error) {
            showNotification('Sign in failed. Please try again.', 'error');
          } finally {
            // Reset button
            submitBtn.disabled = false;
            submitBtn.textContent = 'Sign in';
          }
        });
      }

      function showNotification(message, type = 'info', duration = 5000) {
        const notification = document.createElement('div');
        const bgColor = type === 'success' ? 'bg-green-500' : type === 'error' ? 'bg-red-500' : 'bg-blue-500';
        notification.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50`;
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
          notification.remove();
        }, duration);
      }
    </script>

    <!-- Background Decoration -->
    <div class="fixed inset-0 -z-10 overflow-hidden">
      <div class="absolute -top-40 -right-32 w-96 h-96 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
      <div class="absolute -bottom-32 -left-40 w-96 h-96 bg-blue-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
    </div>

    <style>
      @keyframes blob {
        0%, 100% {
          transform: translate(0px, 0px) scale(1);
        }
        33% {
          transform: translate(30px, -50px) scale(1.1);
        }
        66% {
          transform: translate(-20px, 20px) scale(0.9);
        }
      }
      .animate-blob {
        animation: blob 7s infinite;
      }
      .animation-delay-2000 {
        animation-delay: 2s;
      }
      .animation-delay-4000 {
        animation-delay: 4s;
      }
    </style>
  </body>
</html>