---
// Better Auth UI Demo Page
// Showcases the new authentication components
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Better Auth UI Demo</title>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div class="max-w-6xl mx-auto py-8 px-4">
      <h1 class="text-3xl font-bold text-gray-900 mb-8">🎨 Better Auth UI Demo</h1>
      
      <!-- Component Status -->
      <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-8">
        <h2 class="text-xl font-semibold text-blue-900 mb-4">Component Implementation Status</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <h3 class="font-semibold text-blue-800 mb-2">✅ Implemented:</h3>
            <ul class="space-y-1 text-blue-700">
              <li>• AuthCard - Unified authentication</li>
              <li>• UserButton - User menu dropdown</li>
              <li>• UserAvatar - Avatar component</li>
              <li>• SignedIn/SignedOut - Conditional rendering</li>
              <li>• AuthLoading - Loading states</li>
              <li>• RedirectToSignIn/SignUp - Auth redirects</li>
            </ul>
          </div>
          <div>
            <h3 class="font-semibold text-blue-800 mb-2">🔄 In Progress:</h3>
            <ul class="space-y-1 text-blue-700">
              <li>• Settings Cards (Email, Password, etc.)</li>
              <li>• Two-Factor Authentication</li>
              <li>• Passkeys/WebAuthn</li>
              <li>• Session Management</li>
              <li>• API Keys Management</li>
              <li>• Organization Support</li>
            </ul>
          </div>
        </div>
      </div>

      <!-- Demo Sections -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- AuthCard Demo -->
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">🔐 AuthCard Component</h3>
          <p class="text-sm text-gray-600 mb-4">
            The AuthCard provides a unified authentication experience with social providers and email/password.
          </p>
          <div id="auth-card-demo" class="border border-gray-200 rounded-lg p-4 bg-gray-50 min-h-[400px] flex items-center justify-center">
            <span class="text-gray-500">AuthCard will render here</span>
          </div>
        </div>

        <!-- UserButton Demo -->
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">👤 UserButton Component</h3>
          <p class="text-sm text-gray-600 mb-4">
            The UserButton shows user info with a dropdown menu for account management.
          </p>
          <div class="border border-gray-200 rounded-lg p-4 bg-gray-50">
            <div class="flex items-center justify-between">
              <span class="text-sm text-gray-600">Example header with UserButton:</span>
              <div id="user-button-demo" class="bg-white rounded-md px-3 py-2 shadow-sm">
                <span class="text-gray-500 text-sm">UserButton placeholder</span>
              </div>
            </div>
          </div>
        </div>

        <!-- Conditional Rendering Demo -->
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">👁️ Conditional Rendering</h3>
          <p class="text-sm text-gray-600 mb-4">
            SignedIn/SignedOut components show content based on auth state.
          </p>
          <div class="space-y-4">
            <div class="border border-gray-200 rounded-lg p-4 bg-gray-50">
              <div id="signed-in-demo">
                <span class="text-green-600">This content only shows when signed in</span>
              </div>
            </div>
            <div class="border border-gray-200 rounded-lg p-4 bg-gray-50">
              <div id="signed-out-demo">
                <span class="text-gray-600">This content only shows when signed out</span>
              </div>
            </div>
          </div>
        </div>

        <!-- Coming Soon -->
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">🚀 Coming Soon</h3>
          <p class="text-sm text-gray-600 mb-4">
            Advanced features being implemented:
          </p>
          <ul class="space-y-2 text-sm text-gray-700">
            <li>• 🔒 Two-Factor Authentication with QR codes</li>
            <li>• 🔑 Passkeys/WebAuthn for biometric auth</li>
            <li>• 📧 Email change with verification</li>
            <li>• 🔐 Password change with strength meter</li>
            <li>• 🖼️ Avatar upload with image cropping</li>
            <li>• 🏢 Organization management</li>
            <li>• 🔌 API keys generation</li>
            <li>• 🌍 Multi-language support</li>
          </ul>
        </div>
      </div>
    </div>

    <!-- React Components Mount Point -->
    <div id="react-root"></div>

    <script type="module">
      import React from 'react';
      import { createRoot } from 'react-dom/client';
      import { 
        AuthUIProvider, 
        AuthCard, 
        UserButton,
        SignedIn,
        SignedOut,
        AuthLoading
      } from '/src/components/auth-ui/index.ts';
      
      // Mount AuthCard demo
      const authCardContainer = document.getElementById('auth-card-demo');
      if (authCardContainer) {
        const authCardRoot = createRoot(authCardContainer);
        authCardRoot.render(
          React.createElement(AuthUIProvider, null,
            React.createElement(AuthCard, {
              mode: 'signin',
              providers: ['google', 'github'],
              showEmailPassword: true,
              redirectTo: '/dashboard',
              onSuccess: (user) => console.log('Login success:', user)
            })
          )
        );
      }

      // Mount UserButton demo
      const userButtonContainer = document.getElementById('user-button-demo');
      if (userButtonContainer) {
        const userButtonRoot = createRoot(userButtonContainer);
        // For demo purposes, show a placeholder since user might not be authenticated
        userButtonRoot.render(
          React.createElement('div', { className: 'text-sm text-gray-500' }, 
            'UserButton (requires authentication)'
          )
        );
      }

      // Mount conditional rendering demos
      const signedInContainer = document.getElementById('signed-in-demo');
      if (signedInContainer) {
        const signedInRoot = createRoot(signedInContainer);
        signedInRoot.render(
          React.createElement(SignedIn, null,
            React.createElement('div', { className: 'text-green-600 font-medium' }, 
              '✅ You are signed in!'
            )
          )
        );
      }

      const signedOutContainer = document.getElementById('signed-out-demo');
      if (signedOutContainer) {
        const signedOutRoot = createRoot(signedOutContainer);
        signedOutRoot.render(
          React.createElement(SignedOut, null,
            React.createElement('div', { className: 'text-gray-600' }, 
              '❌ You are not signed in'
            )
          )
        );
      }
    </script>
  </body>
</html>